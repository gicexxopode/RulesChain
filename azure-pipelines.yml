# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  Major: '0'
  Minor: '1'
  buildConfiguration: 'Release'

steps:
- script: echo Starting Release Build!
  displayName: 'Starting Release Build'

- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: restore
    projects: '**/*.csproj'
    
- task: DotNetCoreCLI@2
  displayName: 'Run dotnet build  $(buildConfiguration)'
  inputs:
    command: build
    arguments: --configuration $(buildConfiguration)

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: test
    projects: 'test/**/*.csproj'

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: DotNetCoreCLI@2
  displayName: dotnet pack
  inputs:
    command: pack
    arguments: /p:PackageVersion='$(Major).$(Minor).$(Build.BuildId)' --configuration $(buildConfiguration) --no-symbols
    packDirectory: '$(Build.ArtifactStagingDirectory)/packages'

- task: DotNetCoreCLI@2
  displayName: dotnet nuget push $(variables['Build.SourceBranch'])
  inputs:
    command: custom
    custom: nuget
    arguments: push $(Build.ArtifactStagingDirectory)/packages/*.nupkg -k $(nuget.key) -s https://api.nuget.org/v3/index.json --no-service-endpoint

- task: PublishBuildArtifacts@1
  displayName: publish artifacts
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'